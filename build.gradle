plugins {
    // https://github.com/JetBrains/gradle-intellij-plugin
    id 'org.jetbrains.intellij' version '1.17.2'
    id 'jacoco'
    id 'com.github.kt3k.coveralls' version '2.8.4'
    id 'com.github.ManifestClasspath' version '0.1.0-RELEASE'
    // https://github.com/JetBrains/gradle-grammar-kit-plugin
    id 'org.jetbrains.grammarkit' version '2022.3.2.2'
}

group 'net.seesharpsoft.intellij.plugins'

apply plugin: 'java'
project.sourceCompatibility = JavaVersion.VERSION_17
project.targetCompatibility = JavaVersion.VERSION_17
tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'
    options.compilerArgs << "-Xlint:deprecation"
}
repositories {
    mavenCentral()
}
dependencies {
    implementation 'net.seesharpsoft.sharping:sharping-commons:0.21.0'
    compileOnly 'org.apache.ant:ant:1.10.13'
    testImplementation 'org.mockito:mockito-core:4.8.1'
}
sourceSets {
    main {
        java {
            srcDirs = ['src/main/java', 'src/gen/java']
        }
        resources {
            srcDirs = ['src/main/resources']
        }
    }
    test {
        java {
            srcDirs = ['src/test/java']
        }
        resources {
            srcDirs = ['src/test/resources']
        }
    }
}

apply plugin: 'idea'
idea {
    project {
        jdkName = JavaVersion.VERSION_17
        languageLevel = JavaVersion.VERSION_17
        vcs = 'Git'
    }
    module {
        generatedSourceDirs += file('gen')
    }
}

var final EAP_VERSION = 'LATEST-EAP-SNAPSHOT'
var final EAP_BUILD = '242'

var final LATEST_SUPPORTED_VERSION = '2024.1.5' //EAP_VERSION

// IDE version - https://www.jetbrains.com/intellij-repository/releases
var idea_version = System.getenv().getOrDefault('IDEA_VERSION', LATEST_SUPPORTED_VERSION)
var build_version = idea_version == EAP_VERSION ? EAP_BUILD : idea_version.substring(2, 4) + idea_version.charAt(5) // extract e.g. '221' from '2022.1.1'

version '3.4.0-' + build_version

apply plugin: 'org.jetbrains.intellij'
intellij {
    version = idea_version > LATEST_SUPPORTED_VERSION || idea_version == EAP_VERSION ? LATEST_SUPPORTED_VERSION : idea_version
    type = System.getenv().getOrDefault('IDEA_TYPE', 'IC')
    pluginName = 'CSVEditor'
    updateSinceUntilBuild = true
    sameSinceUntilBuild = true
    downloadSources = Boolean.parseBoolean(System.getenv().getOrDefault('IDEA_SOURCES', "true"))

    plugins = [
            'Git4Idea',
            'org.jetbrains.plugins.github'
    ]
}
patchPluginXml {
    // see http://www.jetbrains.org/intellij/sdk/docs/basics/getting_started/build_number_ranges.html for description
    sinceBuild = build_version

    changeNotes = """<pre style="font-family: sans-serif">
CHORE: Update gradle build
FIX: ActionUpdateThread.OLD_EDT is deprecated and going to be removed soon
FIX: Cannot create class CsvEditorSettingsProvider
</pre>"""
}
publishPlugin {
    token = System.getenv().getOrDefault('JI_TOKEN', '')
    channels = [System.getenv().getOrDefault('JI_CHANNELS', 'Testing')]
}

test {
    jacoco {
        enabled = true
    }
    testLogging {
        exceptionFormat = 'full'
        showStandardStreams = true
    }
    // see https://youtrack.jetbrains.com/issue/IDEA-278926
    scanForTestClasses = false
    include "**/*Test.class"
}

grammarKit {
    // version of IntelliJ patched JFlex - https://bintray.com/jetbrains/intellij-third-party-dependencies/jflex
    jflexRelease = '1.7.0-1'
    // tag or short commit hash of Grammar-Kit to use - https://github.com/JetBrains/Grammar-Kit
    // USE DEFAULT
    // grammarKitRelease = System.getenv().getOrDefault('GRAMMAR_KIT_VERSION', '2022.3.2')
}

tasks.named("generateParser").configure {
    sourceFile = file('src/main/java/net/seesharpsoft/intellij/plugins/csv/Csv.bnf')
    targetRootOutputDir = file('src/gen/java')
    pathToParser = 'net/seesharpsoft/intellij/plugins/csv/parser/CsvParser.java'
    pathToPsiRoot = 'net/seesharpsoft/intellij/plugins/csv/psi'
    purgeOldFiles = true
}

tasks.named("generateLexer").configure {
    dependsOn generateParser

    sourceFile = file('src/main/java/net/seesharpsoft/intellij/plugins/csv/CsvLexer.flex')
    targetOutputDir = file('src/gen/java/net/seesharpsoft/intellij/plugins/csv')
    targetClass = 'CsvLexer'
    purgeOldFiles = false
}

compileJava {
    dependsOn generateLexer
}
