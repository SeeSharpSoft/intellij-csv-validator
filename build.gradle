plugins {
    // https://github.com/JetBrains/gradle-intellij-plugin
    id 'org.jetbrains.intellij' version '1.9.0'
    id 'jacoco'
    id 'com.github.kt3k.coveralls' version '2.8.4'
    id 'com.github.ManifestClasspath' version '0.1.0-RELEASE'
    // https://github.com/JetBrains/gradle-grammar-kit-plugin
    id 'org.jetbrains.grammarkit' version '2021.2.2'
}

jacoco {
    toolVersion = "0.8.8"
}

jacocoTestReport {
    reports {
        xml.enabled true
    }
}

group 'net.seesharpsoft.intellij.plugins'

apply plugin: 'java'
project.sourceCompatibility = JavaVersion.VERSION_17
project.targetCompatibility = JavaVersion.VERSION_17
tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
    options.compilerArgs << "-Xlint:deprecation"
}
repositories {
    mavenCentral()
}
dependencies {
    implementation 'net.seesharpsoft.sharping:sharping-commons:0.21.0'
    compileOnly 'org.apache.ant:ant:1.10.12'
    testImplementation 'org.mockito:mockito-core:4.8.1'
}
sourceSets {
    main {
        java {
            srcDirs = ['src/main/java', 'gen']
        }
        resources {
            srcDirs = ['src/main/resources']
        }
    }
    test {
        java {
            srcDirs = ['src/test/java']
        }
        resources {
            srcDirs = ['src/test/resources']
        }
    }
}

apply plugin: 'idea'
idea {
    project {
        jdkName = JavaVersion.VERSION_11
        languageLevel = JavaVersion.VERSION_11
        vcs = 'Git'
    }
    module {
        generatedSourceDirs += file('gen')
    }
}

var final EAP_VERSION = 'LATEST-EAP-SNAPSHOT'
var final EAP_BUILD = '223'

// IDE version - https://www.jetbrains.com/intellij-repository/releases
var idea_version = System.getenv().getOrDefault('IDEA_VERSION', '2022.2.1')
var build_version = idea_version == EAP_VERSION ? EAP_BUILD : idea_version.substring(2, 4) + idea_version.charAt(5) // extract e.g. '221' from '2022.1.1'

version '3.0.1-' + build_version

apply plugin: 'org.jetbrains.intellij'
intellij {
    version = idea_version
    type = System.getenv().getOrDefault('IDEA_TYPE', 'IC')
    pluginName = 'CSVEditor'
    updateSinceUntilBuild = true
    sameSinceUntilBuild = true
    downloadSources = Boolean.parseBoolean(System.getenv().getOrDefault('IDEA_SOURCES', "true"))

    plugins = [
            'Git4Idea',
            'org.jetbrains.plugins.github'
    ]
}
patchPluginXml {
    // see http://www.jetbrains.org/intellij/sdk/docs/basics/getting_started/build_number_ranges.html for description
    sinceBuild = build_version

    changeNotes = """<pre style="font-family: sans-serif">
Major update release 3.*!

For this release, the plugin was reworked quite a bit, focusing on performance and table editor usage. The table editor is now the default editor!

Some options were removed for simplification and consistency (e.g. 'Tabularize' formatting), while new features were added (e.g. comment support in table editor).

Due to incompatible code changes, file specific settings (value separator & escape character) are lost and might need to be set again accordingly.

Feedback is welcome!

PS: The previous versions are still available on the project page.


Update 3.0.1

FIX: cannot init component state (componentName=CsvFileAttributes) #359
FIX: cannot invoke "add(Object)" because "this.myUncommittedActions" is null #361
FIX: cannot invoke "createNotification(...)" because "notificationGroup" is null #362
FIX: cannot invoke "getManager()" because the return value of "getPsiFile()" is null #363
FIX: image in plugin description
FIX: plugin update restart


</pre>"""
}
publishPlugin {
    token = System.getenv().getOrDefault('JI_TOKEN', '')
    channels = [System.getenv().getOrDefault('JI_CHANNELS', 'Testing')]
}

test {
    jacoco {
        enabled = true
    }
    testLogging {
        exceptionFormat = 'full'
        showStandardStreams = true
    }
    // see https://youtrack.jetbrains.com/issue/IDEA-278926
    scanForTestClasses = false
    include "**/*Test.class"
}

grammarKit {
    // version of IntelliJ patched JFlex - https://bintray.com/jetbrains/intellij-third-party-dependencies/jflex
    jflexRelease = '1.7.0-1'
    // tag or short commit hash of Grammar-Kit to use - https://github.com/JetBrains/Grammar-Kit
    grammarKitRelease = System.getenv().getOrDefault('GRAMMAR_KIT_VERSION', '2021.1.2')
}

tasks.named("generateParser").configure {
    source = 'src/main/java/net/seesharpsoft/intellij/plugins/csv/Csv.bnf'
    targetRoot = 'gen'
    pathToParser = '/net/seesharpsoft/intellij/plugins/csv/parser/CsvParser.java'
    pathToPsiRoot = '/net/seesharpsoft/intellij/plugins/csv/psi'
    purgeOldFiles = true
}

tasks.named("generateLexer").configure {
    dependsOn generateParser

    source = 'src/main/java/net/seesharpsoft/intellij/plugins/csv/CsvLexer.flex'
    targetDir = './gen/net/seesharpsoft/intellij/plugins/csv/'
    targetClass = 'CsvLexer'
    purgeOldFiles = true
}

compileJava {
    dependsOn generateLexer
}

// TODO https://youtrack.jetbrains.com/issue/IDEA-298989 - remove after gradle plugin v1.9.1 or v1.10.0 released
setupDependencies {
    doLast {
        fileTree("$buildDir/instrumented/instrumentCode") { include("**/*TableEditorSwing.class") }.files.forEach { delete(it) }
    }
}